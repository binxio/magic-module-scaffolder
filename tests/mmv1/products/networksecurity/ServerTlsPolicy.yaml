!ruby/object:Api::Resource
name: ServerTlsPolicy
base_url: v1beta1/projects/{projectsId}/locations/{locationsId}/serverTlsPolicies
description: |-
  ServerTlsPolicy is a resource that specifies how a server should
  authenticate incoming requests. This resource itself does not affect
  configuration unless it is attached to a target HTTPS proxy or endpoint
  config selector resource. ServerTlsPolicy in the form accepted by
  external HTTPS load balancers can be attached only to TargetHttpsProxy
  with an `EXTERNAL` or `EXTERNAL_MANAGED` load balancing scheme. Traffic
  Director compatible ServerTlsPolicies can be attached to EndpointPolicy
  and TargetHttpsProxy with Traffic Director `INTERNAL_SELF_MANAGED` load
  balancing scheme.
properties:
  - !ruby/object:Api::Type::String
    name: createTime
    description: Output only. The timestamp when the resource was created.
  - !ruby/object:Api::Type::String
    name: updateTime
    description: Output only. The timestamp when the resource was updated.
  - !ruby/object:Api::Type::String
    name: description
    description: Free-text description of the resource.
  - !ruby/object:Api::Type::String
    name: name
    description: "Required. Name of the ServerTlsPolicy resource. It matches the pattern\n`projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`"
    required: true
  - !ruby/object:Api::Type::Boolean
    name: allowOpen
    description: |-
      This field applies only for Traffic Director policies. It is must be set
      to false for external HTTPS load balancer policies. Determines if server
      allows plaintext connections. If set to true, server allows plain text
      connections. By default, it is set to false. This setting is not
      exclusive of other encryption modes. For example, if `allow_open` and
      `mtls_policy` are set, server allows both plain text and mTLS
      connections. See documentation of other encryption modes to confirm
      compatibility. Consider using it if you wish to upgrade in place your
      deployment to TLS while having mixed TLS and non-TLS traffic reaching
      port :80.
  - !ruby/object:Api::Type::NestedObject
    name: mtlsPolicy
    description: Specification of the MTLSPolicy.
    properties:
      - !ruby/object:Api::Type::String
        name: clientValidationTrustConfig
        description: |-
          Reference to the TrustConfig from certificatemanager.googleapis.com
          namespace. If specified, the chain validation will be performed against
          certificates configured in the given TrustConfig. Allowed only if the
          policy is to be used with external HTTPS load balancers.
      - !ruby/object:Api::Type::Array
        name: clientValidationCa
        description: |-
          Required if the policy is to be used with Traffic Director. For external
          HTTPS load balancers it must be empty. Defines the mechanism to obtain
          the Certificate Authority certificate to validate the client
          certificate.
        item_type: !ruby/object:Api::Type::NestedObject
          description: "Specification of ValidationCA. Defines the mechanism to obtain the\nCertificate Authority certificate to validate the peer certificate."
          properties:
            - !ruby/object:Api::Type::NestedObject
              name: grpcEndpoint
              description: Specification of the GRPC Endpoint.
              properties:
                - !ruby/object:Api::Type::String
                  name: targetUri
                  description: "Required. The target URI of the gRPC endpoint. Only UDS path is\nsupported, and should start with \"unix:\"."
                  required: true
            - !ruby/object:Api::Type::NestedObject
              name: certificateProviderInstance
              description: |-
                Specification of a TLS certificate provider instance. Workloads may have
                one or more CertificateProvider instances (plugins) and one of them is
                enabled and configured by specifying this message. Workloads use the
                values from this message to locate and load the CertificateProvider
                instance configuration.
              properties:
                - !ruby/object:Api::Type::String
                  name: pluginInstance
                  description: |-
                    Required. Plugin instance name, used to locate and load
                    CertificateProvider instance configuration. Set to
                    "google_cloud_private_spiffe" to use Certificate Authority Service
                    certificate provider instance.
                  required: true
      - !ruby/object:Api::Type::Enum
        name: clientValidationMode
        description: |
          When the client presents an invalid certificate or no certificate to the
          load balancer, the `client_validation_mode` specifies how the client
          connection is handled. Required if the policy is to be used with the
          external HTTPS load balancing. For Traffic Director it must be empty.
          The possible values are:

          * `CLIENT_VALIDATION_MODE_UNSPECIFIED`: Not allowed.

          * `ALLOW_INVALID_OR_MISSING_CLIENT_CERT`: Allow connection even if
                                                   certificate chain validation of
                                                   the client certificate failed
                                                   or no client certificate was
                                                   presented. The proof of
                                                   possession of the private key
                                                   is always checked if client
                                                   certificate was presented. This
                                                   mode requires the backend to
                                                   implement processing of data
                                                   extracted from a client
                                                   certificate to authenticate the
                                                   peer, or to reject connections
                                                   if the client certificate
                                                   fingerprint is missing.

          * `REJECT_INVALID`: Require a client certificate and allow connection to
                             the backend only if validation of the client
                             certificate passed. If set, requires a reference to
                             non-empty TrustConfig specified in
                             `client_validation_trust_config`.
        values:
          - :CLIENT_VALIDATION_MODE_UNSPECIFIED
          - :ALLOW_INVALID_OR_MISSING_CLIENT_CERT
          - :REJECT_INVALID
  - !ruby/object:Api::Type::KeyValuePairs
    name: labels
    description: Set of label tags associated with the resource.
  - !ruby/object:Api::Type::NestedObject
    name: serverCertificate
    description: "Specification of certificate provider. Defines the mechanism to obtain\nthe certificate and private key for peer to peer authentication."
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: grpcEndpoint
        description: Specification of the GRPC Endpoint.
        properties:
          - !ruby/object:Api::Type::String
            name: targetUri
            description: "Required. The target URI of the gRPC endpoint. Only UDS path is\nsupported, and should start with \"unix:\"."
            required: true
      - !ruby/object:Api::Type::NestedObject
        name: certificateProviderInstance
        description: |-
          Specification of a TLS certificate provider instance. Workloads may have
          one or more CertificateProvider instances (plugins) and one of them is
          enabled and configured by specifying this message. Workloads use the
          values from this message to locate and load the CertificateProvider
          instance configuration.
        properties:
          - !ruby/object:Api::Type::String
            name: pluginInstance
            description: |-
              Required. Plugin instance name, used to locate and load
              CertificateProvider instance configuration. Set to
              "google_cloud_private_spiffe" to use Certificate Authority Service
              certificate provider instance.
            required: true
